
模块一: 用户登录
  0:创建文件夹    jd
  1:创建sql       sql/jd.sql 
	2:分析程序创建  data/login.php
  接收客户端提交的uname和upwd验证登录信息
	返回 {"code":1,"msg":"login succ",
	      "uname":"qiangdong",
				"uid":10}
  或者 {"code":-1,"msg":"用户名为空"}
	SELECT uid FROM jd_user WHERE
	uname='' AND upwd = '';

	3:分析html创建  js/productlist.js
    分析html标准  productlist.html 408 line
		button id="bt-login"
  4:复制html/css/img

模块二: 产品列表
  1:创建sql       sql/jd.sql
	2:创建php       data/productlist.php
	分页查询
  LIMIT 开始记录行数(从0开始),
	      一共查询几条记录        页数-1*3
	SELECT pid FROM jd_product LIMIT 0,3   1页
	SELECT pid FROM jd_product LIMIT 3,3   2页
	SELECT pid FROM jd_product LIMIT 6,3   3页

  3:在productlist.js 中添加程序
	  34---43 line 一个产品信息
	  a:当前页面加载成功后自动发送ajax请求 
		b:获取返回数据拼接代码 


模块二新功能:完成产品列表总页数
  data/productpage.php 总页数
	1:查询当前产品表中记录数
	2:计算总页数 一页8条记录
	  <ol class="pager"> 395



模块三：添加至购物车
功能：谁购物车那个商品数量保存
1.创建一张表 jd_cart 购物车表
[cid编号 /uid用户编号/pid 商品编号/pcount数量 ]
2.点击添加购物车按钮
2.1创建add_cart.php 接收用户提交参数 uid/pid
2.2 查询该用户是否购买过此商品 SELECT
	$sql="SELECT * FROM jd_cart WHERE uid 1 AND pid=1";
2.3如果该用户没有购买过此商品 ISERT
	$sql="INSERT INTO jd_cart VALUES(null,1,1,1)";
2.4如果用户已经购买过 此商品 UPDATE pcount
$sql="UPDATE jd_cart SET pcount=pcount+1"

2.5 HTML为商品绑定点击事件发送ajax请求





模块五：查询购物车中信息
jd_cart		cid uid pid pcount
jd_product  pid pic pname price

cid pic pname price pcount
多表查询
1.from jd_cart,jd_product 多表明
2.from jd_cart c,jd_product p 别名
3.分析两张表条件关联
c.pid=p.pid

结果
SELECT c.cid,p.pname,p.price,c.pcount,p.pic;
FROM jd_cart c,jd_product p WHERE c.pid=p.pid AND c.uid=1;


模块六：删除 购物车中信息
1.：创建php程序 cartdel.php 获取当前购物车编号 删除购物车中对应记录并且返回结果
2.添加js程序，为每个删除按钮绑定点击事件 将购物车编号作为参数传递php  
删除成功后 将当前按钮所在tr删除 


作业：
模块七：+购物车中信息
1.php addcountcart.php
获取 cid参数 在数据库更新响应记录
返回结果
2.js 绑定点击事件，重新计算小计
并且修改数量

模块八 -购物车中信息
1.php subcountcart.php
获取 cid参数 在数据库更新响应记录
返回结果
2.js 绑定点击事件，重新计算小计
并且修改数量